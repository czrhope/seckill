<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合Mybatis过程 -->
	<!-- 1：引入数据库相关属性 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2：配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="driverClass" value="${driver}"/>
		<property name="jdbcUrl" value="${url}"/>
		<property name="user" value="${user}"/>
		<property name="password" value="${password}"/>
		<!-- 配置连接池的私有属性 -->
		<!-- 最大连接数和最小连接数 -->
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 提交后不自动关闭 -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 配置连接等待时间 -->
		<property name="checkoutTimeout" value="10000"/>
		<!-- 获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>
	<!-- 3：配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 引入Mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 配置使用别名 -->
		<property name="typeAliasesPackage" value="org.seckill.entity"/>
		<!-- 扫描sql配置文件：mapper对应映射文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>
	<!-- 4：配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 引入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 给出需要扫描的Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao"/>
	</bean>
	<!-- 注册redisDao -->
	<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
</beans>